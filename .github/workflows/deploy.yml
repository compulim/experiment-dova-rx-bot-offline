# To use this GitHub Actions for deploying the bot, please add a new secret "PUBLISH_PROFILE".
# This secret is the content of *.PublishSettings file downloaded from your Azure Web Apps.

name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AZURE_WEB_APP_NAME: ${{ vars.AZURE_WEB_APP_NAME }}
  PUBLISH_PROFILE: ${{ secrets.PUBLISH_PROFILE }}

jobs:
  build:
    if: github.run_number != 1 && !startsWith(github.repository, 'compulim/template-')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18'

      - run: npm clean-install
      - run: npm run build --if-present
      - run: npm test --if-present
      - run: npm pack
      - run: tar xvf *.tgz

      - name: Run zip -1rq ../zipdeploy.zip .
        run: |
          zip -1rq zipdeploy.zip node_modules
          cd package
          ls -laR
          zip -1rq ../zipdeploy.zip .

      - name: Upload artifact (tarball)
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: '*.tgz'

      - name: Upload artifact (Zip Deploy)
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: zipdeploy.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/heads/')

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - id: deploy
        if: env.PUBLISH_PROFILE
        name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEB_APP_NAME }}
          publish-profile: ${{ env.PUBLISH_PROFILE }}
          package: zipdeploy.zip

      - if: env.PUBLISH_PROFILE
        name: Ping deployment
        # We need to sleep because Azure Web Apps need time to pick up changes
        run: |
          sleep 5
          curl -s ${{ steps.deploy.outputs.webapp-url }}/health.txt
          curl -s ${{ steps.deploy.outputs.webapp-url }}/ready.txt
